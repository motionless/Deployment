@model Motionless.Deployment.Admin.Models.PackageViewModel
<fieldset>
	<legend>Package @Html.Raw(@Model.Product != null ? string.Format("of {0}", Model.Product.Name) : string.Empty)</legend>
	@if(!ViewData.ModelState.IsValid){@Html.ValidationSummary(null,new {@class="alert alert-error"})}
	
	@Html.Partial("EditorTemplates/BaseObject", Model)
	
	<div class="control-group">
		@Html.LabelFor(model => model.Name, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.Name)
			@Html.ValidationMessageFor(model => model.Name)
		</div>
	</div>
	
	<div class="control-group">
		@Html.LabelFor(model => model.Product, new { @class = "control-label" })

		<div class="controls">
			@Html.DropDownListFor(model => model.SelectedProductId, Model.ProductsSelectList )
			@Html.ValidationMessageFor(model => model.Product)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.PackageConfiguration, new { @class = "control-label" })

		<div class="controls">
			@Html.DropDownListFor(model => model.SelectedPackageConfigurationId, Model.PackageConfigurationsSelectList )
			@Html.ValidationMessageFor(model => model.PackageConfiguration)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.Version, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.Version)
			@Html.ValidationMessageFor(model => model.Version)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.PackageUrl, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.PackageUrl)
			@Html.ValidationMessageFor(model => model.PackageUrl)
		</div>
	</div>

	<div class="control-group">
		<div class="controls">
			<button type="submit" class="btn">Create</button>
		</div>
	</div>

</fieldset>
