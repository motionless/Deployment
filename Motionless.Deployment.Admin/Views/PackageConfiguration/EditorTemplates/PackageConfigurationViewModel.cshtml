@using Motionless.Data.Persistence
@model Motionless.Deployment.Admin.Models.PackageConfigurationViewModel
<fieldset>
	<legend>Package Configuration @Html.Raw(@Model.Product != null ? string.Format("of {0}", Model.Product.Name) : string.Empty)</legend>
	@if(!ViewData.ModelState.IsValid){@Html.ValidationSummary(null,new {@class="alert alert-error"})}
	
	@Html.Partial("EditorTemplates/BaseObject", Model)

	<div class="control-group">
		@Html.LabelFor(model => model.Name, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.Name)
			@Html.ValidationMessageFor(model => model.Name)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.IsActive, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.IsActive)
			@Html.ValidationMessageFor(model => model.IsActive)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.SearchPath, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.SearchPath)
			@Html.ValidationMessageFor(model => model.SearchPath)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.SearchPattern, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.SearchPattern)
			@Html.ValidationMessageFor(model => model.SearchPattern)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.Version, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.Version)
			@Html.ValidationMessageFor(model => model.Version)
		</div>
	</div>
	
	<div class="control-group">
		@Html.LabelFor(model => model.Product, new { @class = "control-label" })

		<div class="controls">
			@Html.DropDownListFor(model => model.SelectedProductId, Model.ProductsSelectList )
			@Html.ValidationMessageFor(model => model.Product)
		</div>
	</div>
	@if (Model.Packages != null && Model.Packages.Any())
 {
		<h4>Servers</h4>
		<table class="table table-striped">
			<tr>
				<th>Name</th>
				<th class="span1">Edit</th>
			</tr>
			@foreach (var package in Model.Packages)
   {
				<tr>
					<td>@Html.DisplayFor(m => package.Name)</td>
					<td class="span1">@Html.ActionLink("Edit", "Edit", "Package", new { Id = package.Id }, new { @class = "btn btn-small" })</td>
				</tr>
   }
		</table>
 }

	<div class="control-group">
		<div class="controls">
			<button type="submit" class="btn">Create</button>
		</div>
	</div>

</fieldset>
