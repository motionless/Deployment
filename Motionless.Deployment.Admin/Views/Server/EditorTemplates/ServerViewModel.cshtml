@model Motionless.Deployment.Admin.Models.ServerViewModel
<fieldset>
	<legend>Server <button type="submit" class="btn btn-primary pull-right">@this.ViewContext.RouteData.GetRequiredString("action")</button></legend>
	@if(!ViewData.ModelState.IsValid){@Html.ValidationSummary(null,new {@class="alert alert-error"})}
	@Html.HiddenFor(m => m.Id)
	<div class="control-group">
		@Html.LabelFor(model => model.Name, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.Name)
			@Html.ValidationMessageFor(model => model.Name)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.IsDeleted, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.IsDeleted)
			@Html.ValidationMessageFor(model => model.IsDeleted)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.Environments, new { @class = "control-label" })

		<div class="controls">
			@Html.ListBoxFor(model => model.SelectedEnvironmentIds,Model.EnvironmentsSelectList,new {@class ="span5"})
			@Html.ValidationMessageFor(model => model.Environments)
		</div>
	</div>
	@*<div class="control-group">
		@Html.LabelFor(model => model.CreatedAt, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.CreatedAt)
			@Html.ValidationMessageFor(model => model.CreatedAt)
		</div>
	</div>
	<div class="control-group">
		@Html.LabelFor(model => model.UpdatedAt, new { @class = "control-label" })

		<div class="controls">
			@Html.EditorFor(model => model.UpdatedAt)
			@Html.ValidationMessageFor(model => model.UpdatedAt)
		</div>
	</div>*@

	<div class="control-group">
		<div class="controls">
			<button type="submit" class="btn btn-primary pull-right">@this.ViewContext.RouteData.GetRequiredString("action")</button>
		</div>
	</div>

</fieldset>
